{
 "metadata": {
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": 3
  },
  "orig_nbformat": 2
 },
 "nbformat": 4,
 "nbformat_minor": 2,
 "cells": [
  {
   "source": [
    "## 순차 데이터(sequential data)\n",
    "### 이전까지 다뤘던 데이터들은 다른 데이터들과 어떠한 연관이 없는 독립적 객체들이 모인 데이터였다. 그래서 막 섞어가며 훈련 시켜도 아무런 지장이 없었다. \n",
    "### 허나 순차 데이터는 이전 데이터와 연관이 있는 데이터들이다. 예를들면 시간당 기온.(2시 20도, 3시 23도, 4시 22도,...)\n",
    "### 참고로 일정 시간 간격으로 배치된 순차 데이터를 시계열 데이터(time series data)라고 한다. \n",
    "### 대표적인 순차 데이터는 텍스트다. 글자 혹은 단어들의 순서가 맞아야 말이 되는 단어 또는 문장이 만들어지기 때문이다. \n",
    "### 모델에서 순차 데이터를 처리하는 각 단계를 타임 스탭(time step)이라고 부른다. \n",
    "### 예를 들어 'Hello Deep Learning'이라는 문자열이 있을 때 데이터 처리 단위가 단어면 문자열의 타임 스탭은 3이다. 만약 글자가 처리 단위면 19글자가 있으니 타임 스탭은 19가 된다. \n",
    "### 앞서 우리가 배운 완전 연결 신경망으로는 순차 데이터를 처리할 수가 없다. 왜냐하면 완전 연결 신경망은 이전에 입력한 데이터 정보를 저장하는 변수가 없기 때문. \n",
    "### 순차 데이터를 처리하려면 순환 신경망을 이용해야한다. 순환 신경망은 뉴런의 출력이 순환되는 신경망을 말한다. 순환 신경망은 은닉층의 출력이 다시 입력으로 사용된다는 특징이 있다. 이를 순환 구조라고 부르며 순환 구조가 있는 층(레이어)를 순환층이라 부른다. \n",
    "### 은닉층의 출력을 다시 입력으로 사용한다는 말은 앞서 말했듯 이전 입력값의 정보를 이용해 현재 입력값을 처리할 수 있다는 걸 뜻한다. "
   ],
   "cell_type": "markdown",
   "metadata": {}
  },
  {
   "source": [
    "### 순차 신경망은 레이어나 뉴런을 셀(cell)이라고 부른다. 셀에 있는 모든 뉴런의 순환구조를 표현하는 대신 큰 뉴런 하나에 순환구조를 표현하는 방식을 선택하였다. \n",
    "### 순환 신경망에서는 셀의 출력을 은닉 상태(hidden state)라고 부른다. \n",
    "### 앞서 말했듯 셀에서 정방향 계산을 할 때 이전 출력값이 입력값으로 들어간다. 순환 신경망은 활성화 함수로 하이퍼볼릭 탄젠트(tanh)를 쓰므로 이전 출력값을 H_p라는 행렬로 표시하고 현재 출력값을 H라고 하면 H = tanh(X*W_x + H_p * W+_H + b)가 되는 것이다. \n",
    "###  그러면 Hello Deep Learning에서 Deep에 대한 연산을 할 때 입력값으로 Hello를 넣을 때 나온 출력값을 입력으로 쓰는건가? 그게 맞겠지? \n",
    "### 출력층은 뭐 당연히 분류할 때 주로 쓰는 완전 연결 레이어(Dense Layer)를 주로 쓴다. 딴거 쓸 수도 있는데 분류하려면 Dense Layer만 쓰더라. 다른거 쓰는걸 본 적이 없다.(Z_2 = H*W_2 + b_2, A_2 = sigmoid(Z_2)"
   ],
   "cell_type": "markdown",
   "metadata": {}
  },
  {
   "source": [
    "### 순환 레이어의 입력 데이터 크기는 (m, n_f)다. m은 샘플 개수, n_f는 특성 개수다.\n",
    "### 순환 레이어의 가중치 W_1x의 크기는 (n_f, n_c)다. n_f는 특성 개수, n_c는 순환층에 있는 셀의 개수다. \n",
    "### 입력 데이터와 w_1x를 내적하면 크기가 (m, n_c)인 행렬이 나온다. 선형 계산을 해야하니 이전 스탭의 출력값과 w_1h의 내적곱 역시 (m, n_c)인 행렬이 나와야한다. \n",
    "### H_p = (m, n_c), W_1h = (n_c, n_c)여야 (m, n_c)가 나온다. 왜 H_p가 (m, n_c)면 얘는 이전 스탭에서 순환 레이어의 출력값이었기 때문이다. 그러니 (m, n_c)가 아니면 말이 안된다. \n",
    "### 두번째 층(출력층)은 H*W_2인데 W_2는 (n_c, n_classes)다. 여기서 n_classes는 분류할 클래스 갯수인데 이진 분류인 경우엔 1이 되므로 H*W_2 = (m, n_c) * (n_c, 1) = (m, 1)이 된다.\n",
    "### 참고로 b_1 = (n_c, 1), b_2 = (n_classes, 1)이다. "
   ],
   "cell_type": "markdown",
   "metadata": {}
  }
 ]
}